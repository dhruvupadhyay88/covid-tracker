{"version":3,"sources":["components/Cards/Cards.module.css","App.module.css","components/Cards/Cards.jsx","components/api/index.js","components/Chart/Chart.jsx","components/CountryInfo/CountryInfo.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryInfo/CountryInfo.module.css"],"names":["module","exports","Cards","data","Container","className","styles","container","Row","Card","border","style","width","box","Header","header","Body","Title","confirmed","start","end","value","duration","separator","Text","dateText","Date","lastUpdate","toDateString","recovered","deaths","url","fetchData","country","a","newUrl","axios","get","response","fetchDailyData","newData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","getAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","CountryInfo","handleCountryChange","fetchedCountries","setFetchedCountries","Form","Control","as","default","onChange","e","target","i","key","App","fetchedData","setState","state","this","titleRow","parentRow","Col","chartCol","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea170a8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3Ic1M\",\"header\":\"Cards_header__1fbny\",\"box\":\"Cards_box__Qycin\",\"dateText\":\"Cards_dateText__3oiXI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2Gb2S\",\"chartCol\":\"App_chartCol__1chdO\",\"parentRow\":\"App_parentRow__2jdvB\",\"titleRow\":\"App_titleRow__1apbR\",\"title\":\"App_title__y-r2h\"};","import React from \"react\";\r\nimport styles from \"./Cards.module.css\";\r\nimport { Card, Row, Container } from \"react-bootstrap\";\r\nimport CountUp from \"react-countup\";\r\n\r\nconst Cards = ({ data }) => {\r\n  return (\r\n    <Container className={styles.container}>\r\n      <Row>\r\n        <Card\r\n          border=\"primary\"\r\n          style={{ width: \"18rem\" }}\r\n          className={styles.box}\r\n        >\r\n          <Card.Header className={styles.header}>INFECTED</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {data.confirmed ? (\r\n                <CountUp\r\n                  start={0}\r\n                  end={data.confirmed.value}\r\n                  duration={2}\r\n                  separator=\",\"\r\n                />\r\n              ) : (\r\n                <h6>Loading...</h6>\r\n              )}\r\n            </Card.Title>\r\n            <Card.Text>\r\n              <h6 className={styles.dateText}>\r\n                {new Date(data.lastUpdate).toDateString()}\r\n              </h6>\r\n              Total number of infected cases of COVID-19\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n      <Row>\r\n        <Card\r\n          border=\"success\"\r\n          style={{ width: \"18rem\" }}\r\n          className={styles.box}\r\n        >\r\n          <Card.Header className={styles.header}>RECOVERED</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {data.recovered ? (\r\n                <CountUp\r\n                  start={0}\r\n                  end={data.recovered.value}\r\n                  duration={2}\r\n                  separator=\",\"\r\n                />\r\n              ) : (\r\n                <h6>Loading...</h6>\r\n              )}\r\n            </Card.Title>\r\n            <Card.Text>\r\n              <h6 className={styles.dateText}>\r\n                {new Date(data.lastUpdate).toDateString()}\r\n              </h6>\r\n              Total number of recovered COVID-19 cases\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n      <Row>\r\n        <Card border=\"danger\" style={{ width: \"18rem\" }} className={styles.box}>\r\n          <Card.Header className={styles.header}>DEATHS</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {data.deaths ? (\r\n                <CountUp\r\n                  start={0}\r\n                  end={data.deaths.value}\r\n                  duration={2}\r\n                  separator=\",\"\r\n                />\r\n              ) : (\r\n                <h6>Loading...</h6>\r\n              )}\r\n            </Card.Title>\r\n            <Card.Text>\r\n              <h6 className={styles.dateText}>\r\n                {new Date(data.lastUpdate).toDateString()}\r\n              </h6>\r\n              Total number of deaths caused by COVID-19\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let newUrl = url;\r\n\r\n  if (country) {\r\n    newUrl = url + \"/countries/\" + country;\r\n  } else {\r\n    newUrl = url;\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(newUrl);\r\n    const response = {\r\n      confirmed: data.confirmed,\r\n      recovered: data.recovered,\r\n      deaths: data.deaths,\r\n      lastUpdate: data.lastUpdate,\r\n    };\r\n\r\n    return response;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(url + \"/daily\");\r\n    const newData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return newData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/countries`);\r\n\r\n    return data.countries.map((country) => country.name);\r\n  } catch (error) {}\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nconst Chart = ({ data, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    getAPI();\r\n  }, []);\r\n\r\n  const barChart = data.confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\"blue\", \"green\", \"red\"],\r\n            data: [\r\n              data.confirmed.value,\r\n              data.recovered.value,\r\n              data.deaths.value,\r\n            ],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const lineChart =\r\n    dailyData.length !== 0 ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [\r\n            {\r\n              data: dailyData.map((data) => data.confirmed),\r\n              label: \"Infected\",\r\n              borderColor: \"#1C4DD3\",\r\n\r\n              fill: true,\r\n            },\r\n            {\r\n              data: dailyData.map((data) => data.deaths),\r\n              label: \"Deaths\",\r\n              borderColor: \"#EE1C13\",\r\n              backgroundColor: \"#EE9934\",\r\n              fill: true,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport styles from \"./CountryInfo.module.css\";\r\nimport { fetchCountries } from \"../api\";\r\n\r\nconst CountryInfo = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    getAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <Container className={styles.Container}>\r\n      <Form>\r\n        <Form.Control\r\n          as=\"select\"\r\n          default=\"World-wide\"\r\n          onChange={(e) => handleCountryChange(e.target.value)}\r\n        >\r\n          <option value=\"\">World-wide</option>\r\n          {fetchedCountries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CountryInfo;\r\n","import React from \"react\";\r\nimport styles from \"./App.module.css\";\r\nimport Cards from \"./components/Cards/Cards\";\r\nimport Chart from \"./components/Chart/Chart\";\r\nimport CountryInfo from \"./components/CountryInfo/CountryInfo\";\r\nimport { fetchData } from \"./components/api\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\n//\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: {},\r\n      country: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <Container className={styles.container}>\r\n        <Row className={styles.titleRow}>\r\n          <h1 className={styles.title}>COVID-19 TRACKER</h1>\r\n        </Row>\r\n        <Row className={styles.parentRow}>\r\n          <Col>\r\n            <Cards data={data} />\r\n          </Col>\r\n          <Col className={styles.chartCol}>\r\n            <Row>\r\n              <CountryInfo handleCountryChange={this.handleCountryChange} />\r\n            </Row>\r\n            <Row>\r\n              <Chart data={data} country={country} />\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1WzRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryInfo_container__1Fyun\"};"],"sourceRoot":""}